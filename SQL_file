first lets create class section and users
section 
CREATE TABLE section (
    section_id INT AUTO_INCREMENT PRIMARY KEY,
    section_name VARCHAR(50) NOT NULL
);

class
CREATE TABLE class (
    class_id INT AUTO_INCREMENT PRIMARY KEY,
    class_name VARCHAR(100) NOT NULL
);

classTeacher
CREATE TABLE classteacher (
    teacher_id INT AUTO_INCREMENT PRIMARY KEY,
    teacher_name VARCHAR(100) NOT NULL,
    teacher_phone VARCHAR(15) NOT NULL,
    class_id INT NOT NULL,
    section_id INT NOT NULL,
    FOREIGN KEY (class_id) REFERENCES class(class_id) ON DELETE CASCADE,
    FOREIGN KEY (section_id) REFERENCES section(section_id) ON DELETE CASCADE
);

admin
CREATE TABLE user (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    role VARCHAR(50) NOT NULL,
    password VARCHAR(255) NOT NULL,
    phone VARCHAR(15) NOT NULL,
    image VARCHAR(255), -- Field for storing image path or URL
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

Student TABLE
CREATE TABLE student (
    student_id INT AUTO_INCREMENT PRIMARY KEY,
    full_name VARCHAR(255) NOT NULL,
    class_id INT NOT NULL,
    section_id INT NOT NULL,
    profile_image VARCHAR(255),
    address VARCHAR(255),
    street VARCHAR(255),
    phone_number VARCHAR(15),
    words_from_class_teacher TEXT,
    words_from_principal TEXT,
    education_status VARCHAR(50),
    remarks TEXT,
    FOREIGN KEY (class_id) REFERENCES class(class_id) ON DELETE CASCADE,
    FOREIGN KEY (section_id) REFERENCES section(section_id) ON DELETE CASCADE
);
Achivement TABLE
CREATE TABLE achievement (
    id INT AUTO_INCREMENT PRIMARY KEY,         -- Unique ID for each achievement
    title VARCHAR(255) NOT NULL,               -- Title of the achievement
    date_of_achievement DATE NOT NULL,         -- Date of the achievement
    awarded_by VARCHAR(255),                   -- Awarding entity/individual
    photo BLOB,                                -- Photo related to the achievement
    student_id INT,                            -- Foreign key referencing student_id
    FOREIGN KEY (student_id) REFERENCES student(student_id) ON DELETE CASCADE -- Reference to student table
);

